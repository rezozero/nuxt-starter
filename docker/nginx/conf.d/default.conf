map $sent_http_content_type $expires {
    default                     1y;
    "text/html"                 off;
    "text/html; charset=utf-8"  off;
}

server {
    listen 80;
    server_name localhost;

    root /var/www/html/public;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    include /etc/nginx/redirections.conf;

    ## Nginx can serve behind Varnish OR/AND Traefik reverse proxy
    # real_ip_header X-Forwarded-For;
    # set_real_ip_from varnish;
    ## Set your project docker network CIDR here
    # set_real_ip_from 172.186.0.0/16;
    ## Set your Traefik network CIDR here: usually 172.18.0.0/16 and fd01:846c:3ae6:fe92::/64
    # set_real_ip_from 172.18.0.0/16;
    # set_real_ip_from fd01:846c:3ae6:fe92::/64;
    # real_ip_recursive on;

    # Kick wordpress brute force attack before it
    # fills Roadiz logs with not-found resources.
    location ~ ^/wp\-(includes|admin|login\.php) {
        access_log off;
        return 404;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny all;
    }
    location ~ /\.env {
        deny all;
    }
    location ~ /\.git {
        deny all;
    }
    location = /README.md {
        deny all;
    }
    location = /.nojekyll {
        deny all;
    }

    ## Accept custom 404 error pages at project root
    #error_page 404 /error-404.html;
    #location = /error-404.html {
    #   root /var/www/html;
    #   internal;
    #}

    ## Accept custom 500x error pages at project root
    # error_page 500 502 503 504 /error-50x.html;
    # location = /error-50x.html {
    #    root /var/www/html;
    #    internal;
    # }

    # Enable Expire on Themes public assets
    location ~* ^/(?:bundles|themes|files|assets|storage)/*.*\.(?:ico|pdf|css|js|woff2?|eot|ttf|otf|svg|gif|jpe?g|png|webp|avif|mp4|webm)$ {
        # Serve not found files with PHP
        try_files $uri $uri/ /index.php$is_args$args;

        expires 1y;
        access_log off;
        add_header "Pragma" "public";
        add_header "Cache-Control" "public";
        add_header "Vary" "Accept-Encoding";
        add_header "X-Frame-Options" "SAMEORIGIN";
        add_header "X-XSS-Protection" "1; mode=block";
        add_header "X-Content-Type-Options" "nosniff";
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

        if ($request_method = 'OPTIONS') {
            access_log off;
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location / {
        expires $expires;
        try_files $uri $uri/index.html @nuxt;
    }

    #
    # Proxy to node server
    # Node server must run on `node:3000`
    #
    location @nuxt {
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Cache-Status $upstream_cache_status;
        #proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        # Force HTTPS protocol because we are behind a reverse proxy
        proxy_set_header X-Forwarded-Proto  https;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        #proxy_read_timeout          1m;
        #proxy_connect_timeout       1m;
        proxy_pass                  http://node:3000;

        # Include file to allow, deny IP addresses
        # Override /etc/nginx/nuxt_ip_filter.conf from docker run environment
        include /etc/nginx/nuxt_ip_filter.conf;
    }

    location = /favicon.ico { log_not_found off; access_log off; }
}
